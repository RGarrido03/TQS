name: Sonar analysis

on:
  push:
    paths:
      - "HW1/backend/**"
  workflow_dispatch:

defaults:
  run:
    working-directory: ./HW1/backend

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    container: maven:3.9.6-eclipse-temurin-21
    services:
      database:
        image: postgres:16.2
        env:
          POSTGRES_DB: tqs
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 21
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          SPRING_APPLICATION_JSON='{"spring.datasource.url":"jdbc:postgresql://database:5432/tqs","spring.datasource.username":"postgres","spring.datasource.password":"postgres","spring.jpa.hibernate.ddl-auto":"update","management.influx.metrics.export.enabled":"false"}' \
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=RGarrido03_TQS_107927_d9551e07-a899-447a-a624-b3499e84e691 -Dsonar.projectName='TQS_107927' \
